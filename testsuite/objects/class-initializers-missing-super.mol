
//!should_fail
//!err .*ClassError: constructor doesn't call Super::new().*
//!err .*

import lib.libcore

fn test() {
    let clo = "It Closure Worked"

    class Parent {
        val mut bar

        fn new(self) {
            self.bar = 8
        }
    }

    class Child extends Parent {
        val mut foo

        fn new(self) {
            // TODO if the call to the parent's constructor is missing, we expect to get an error
            //Super::new(self)
            self.foo = clo
        }
    }

    let parent = new Parent()
    println(str(parent.bar))

    let child = new Child()
    println(child.foo)
    println(str(child.bar))
}
test()

